<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">

<!-- //////////////////////////////////////////////////////////////////////////////////// -->

	<!-- 회원 정보 가져오기(리스트) -->
	<select id="memberListAll" resultType="MemberModel">
		SELECT * FROM MEMBER ORDER BY MEMBER_JOIN_DATE DESC
	</select>
	<!-- 활성화 회원 조회 -->
	<select id="memberListAct" resultType="MemberModel">
		SELECT * FROM MEMBER WHERE MEMBER_USE_YN = 0 ORDER BY MEMBER_JOIN_DATE DESC
	</select>
	<!-- 차단 회원 조회 -->
	<select id="memberListBck" resultType="MemberModel">
		SELECT * FROM MEMBER WHERE MEMBER_USE_YN = 1 ORDER BY MEMBER_JOIN_DATE DESC
	</select>
	
	<select id="memberListRank" resultType="MemberModel">
		select * from (
			select member_id, count(*) member_order_count, sum(order_receive_moneysum) member_moneysum 
			from order_book where order_use_yn = 1 group by member_id) a
		inner join member b on a.member_id = b.member_id order by a.member_moneysum desc
	</select>
	
	<!-- 회원 검색 목록 -->
	<select id="searchMember" parameterType="map" resultType="MemberModel">
		SELECT * FROM 
		<if test='status!="rank"'>MEMBER</if>
		<if test='status=="rank"'>(select a.member_order_count, a.member_moneysum, b.* from (
				select member_id, count(*) member_order_count, sum(order_receive_moneysum) member_moneysum 
				from order_book where order_use_yn = 1 group by member_id) a
			inner join member b on a.member_id = b.member_id order by a.member_moneysum desc)</if>
		<where>
			<if test="searchNum!=0">
				<if test="searchNum == 1">AND MEMBER_ID like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 2">AND MEMBER_NAME like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 3">AND MEMBER_EMAIL like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 4">AND MEMBER_PHONE like '%'||#{searchKeyword}||'%' 
					AND MEMBER_MOBILE like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 5">AND MEMBER_JUMIN1 like '%'||#{searchKeyword}||'%'
					AND MEMBER_JUMIN2 like '%'||#{searchKeyword}||'%'</if>
			</if>
			<if test="active!=0">
					<if test="active==1">
						AND MEMBER_USE_YN = 0
					</if>
					<if test="active==2">
						AND MEMBER_USE_YN = 1
					</if>
			</if>
			<if test="date_min!=null"><![CDATA[AND MEMBER_JOIN_DATE >= #{date_min}]]></if>
			<if test="date_max!=null"><![CDATA[AND MEMBER_JOIN_DATE <= #{date_max}]]></if>
		</where>
		ORDER BY MEMBER_JOIN_DATE DESC
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="memberView" resultType="MemberModel">
		SELECT * FROM MEMBER WHERE MEMBER_ID = #{member_id}
	</select>
	
	<!-- 회원 등급 상태 조회 -->
	<select id="memberViewOrder" resultType="MemberModel">
		SELECT * FROM (select a.member_order_count, a.member_moneysum, b.* from (
				select member_id, count(*) member_order_count, sum(order_receive_moneysum) member_moneysum 
				from order_book where order_use_yn = 1 group by member_id) a
			inner join member b on a.member_id = b.member_id order by a.member_moneysum desc) WHERE MEMBER_ID = #{member_id}
	</select>
	
	<select id="memberOrderList" parameterType="String" resultType="OrderModel">
		select * from ORDER_BOOK where member_id = #{member_id} AND ORDER_USE_YN = 1
	</select>
	
	<select id="memberOrderListBck" parameterType="String" resultType="OrderModel">
		select * from ORDER_BOOK where member_id = #{member_id} AND ORDER_USE_YN = 0
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="memberModify" parameterType="MemberModel">
		UPDATE MEMBER SET MEMBER_PW = #{member_pw}, 
						MEMBER_NAME = #{member_name},
		    			MEMBER_JUMIN1 = #{member_jumin1}, 
	    				MEMBER_JUMIN2 = #{member_jumin2},
				    	MEMBER_EMAIL = #{member_email},
					   	MEMBER_EMAIL_GET = #{member_email_get, jdbcType=VARCHAR},
					   	MEMBER_PHONE = #{member_phone}, 
					    MEMBER_MOBILE = #{member_mobile},
					    MEMBER_ZIPCODE = #{member_zipcode}, 
					    MEMBER_ADDR1 = #{member_addr1},
					    MEMBER_ADDR2 = #{member_addr2}, 
					    MEMBER_BANKNAME = #{member_bankname},
					    MEMBER_REFUND_ACCOUNT = #{member_refund_account},
					    MEMBER_ACCOUNT_HOLDER = #{member_account_holder},
					    MEMBER_USE_YN = #{member_use_yn}  
		WHERE MEMBER_ID = #{member_id}
	</update>
	
	<!-- 회원 삭제 -->
	<delete id="memberDelete" parameterType="String">
		DELETE MEMBER WHERE MEMBER_ID = #{member_id}
	</delete>
	
<!-- //////////////////////////////////////////////////////////////////////////////////// -->

	<!-- 도서 정보 가져오기(리스트) -->
	<select id="bookListAll" resultType="BooksModel">
		SELECT * FROM BOOK ORDER BY BOOK_DATE DESC
	</select>
	<!-- 사용 도서 조회 -->
	<select id="bookListAct" resultType="BooksModel">
		SELECT * FROM BOOK WHERE BOOK_USE_YN = 1 ORDER BY BOOK_DATE DESC
	</select>
	<!-- 비사용 도서 조회 -->
	<select id="bookListBck" resultType="BooksModel">
		SELECT * FROM BOOK WHERE BOOK_USE_YN = 0 ORDER BY BOOK_DATE DESC
	</select>
	
	<!-- 재고 관리 -->
	<select id="stockList" resultType="BooksModel">
		select * from book order by book_current_count/book_base_count
	</select>
	
	<!-- 품절 상품 관리 -->
	<select id="soldOutList" resultType="BooksModel">
		select * from book where book_current_count = 0 order by book_date
	</select>
	
	<!-- 관리자 도서 검색 목록 -->
	<select id="searchBook" parameterType="map" resultType="BooksModel">
		SELECT * FROM BOOK
		<where>
			<if test="searchNum!=0">
				<if test="searchNum == 1">AND BOOK_NAME like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 2">AND BOOK_CATEGORY like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 3">AND BOOK_AUTH like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 4">AND COMPANY_ID like '%'||#{searchKeyword}||'%'</if>
			</if>
			<if test="active!=0">
					<if test="active==1">
						AND BOOK_USE_YN = 1
					</if>
					<if test="active==2">
						AND BOOK_USE_YN = 0
					</if>
			</if>
			<if test="date_min!=null"><![CDATA[AND BOOK_DATE >= #{date_min}]]></if>
			<if test="date_max!=null"><![CDATA[AND BOOK_DATE <= #{date_max}]]></if>
			<if test="price_min!=null"><![CDATA[AND BOOK_PRICE >= #{price_min}]]></if>
			<if test="price_max!=null"><![CDATA[AND BOOK_PRICE <= #{price_max}]]></if>
			<if test='status=="stockMgt"'>AND book_current_count != 0</if>
			<if test='status=="soldOut"'>AND book_current_count = 0</if>
		</where>
		<if test='status!="stockMgt"'>ORDER BY BOOK_DATE DESC</if>
		<if test='status=="stockMgt"'>ORDER BY book_current_count/book_base_count</if>
	</select>
	
	<!-- 가장 최근의 도서 정보 조회 -->
	<select id="selectNewest" resultType="BooksModel">
		<!-- select rownum, a.* from (select * from book order by book_date desc) a where rownum=1 -->
		select BOOK_NUM, BOOK_CATEGORY, BOOK_NAME, BOOK_CONTENT, BOOK_PRICE, BOOK_IMAGE, BOOK_SELL_COUNT, BOOK_BASE_COUNT, 
			BOOK_CURRENT_COUNT, BOOK_PUBLISH_DATE, BOOK_DATE, COMPANY_ID, BOOK_AUTH, BOOK_USE_YN from 
				(select rownum, a.* from (select * from book order by book_date desc) a where rownum=1)
	</select>
	
	<!-- 단일 도서 정보 조회 -->
	<select id="selectOne" resultType="BooksModel">
		SELECT * FROM BOOK WHERE BOOK_NUM = #{BOOK_NUM}
	</select>
	
<!-- //////////////////////////////////////////////////////////////////////////////////// -->

	<!-- 전체 주문 리스트 가져오기 -->
 	<select id="orderListAll" resultType="OrderModel">
		SELECT * FROM ORDER_BOOK ORDER BY ORDER_REGDATE
	</select>
	
	<!-- 결제 미완료 -->
	<select id="orderListTrade" resultType="OrderModel">
		SELECT * FROM ORDER_BOOK WHERE ORDER_USE_YN = 1 AND PAYMENT_STATUS = 'PS01' ORDER BY ORDER_REGDATE
	</select>
	
	<!-- 배송 미완료 -->
	<select id="orderListTrans" resultType="OrderModel">
		SELECT * FROM ORDER_BOOK WHERE ORDER_USE_YN = 1 AND ORDER_TRANS_STATUS !='ST03' ORDER BY ORDER_REGDATE
	</select>
	
	<!-- 취소된 주문 -->
	<select id="orderListBck" resultType="OrderModel">
		SELECT * FROM ORDER_BOOK WHERE ORDER_USE_YN = 0 ORDER BY ORDER_REGDATE
	</select>

	<!-- 관리자 주문 검색 목록 -->
	<select id="searchOrder" parameterType="map" resultType="OrderModel">
		SELECT * FROM ORDER_BOOK
		<where>
			<if test="searchNum!=0">
				<if test="searchNum == 1">AND ORDER_TRADE_NUM like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 2">AND ORDER_TRANS_NUM like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 3">AND MEMBER_ID like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 4">AND ORDER_TRADE_PAYER like '%'||#{searchKeyword}||'%'</if>
				<if test="searchNum == 5">AND ORDER_RECEIVE_NAME like '%'||#{searchKeyword}||'%'</if>
			</if>
			<if test="pay_s!=0">
				<if test="pay_s == 1">AND PAYMENT_STATUS='PS01'</if>
				<if test="pay_s == 2">AND PAYMENT_STATUS='PS02'</if>
			</if>
			<if test="trans_s!=0">
				<if test="trans_s == 1">AND ORDER_TRANS_STATUS='ST01'</if>
				<if test="trans_s == 2">AND ORDER_TRANS_STATUS='ST02'</if>
				<if test="trans_s == 3">AND ORDER_TRANS_STATUS='ST03'</if>
			</if>
			<if test="active!=0">
				AND ORDER_USE_YN = 0
			</if>
			<if test="date_min!=null"><![CDATA[AND ORDER_REGDATE >= #{date_min}]]></if>
			<if test="date_max!=null"><![CDATA[AND ORDER_REGDATE <= #{date_max}]]></if>
		</where>
		ORDER BY ORDER_REGDATE DESC
	</select>
	
	<!-- //////////////////////////////////////////////////////////////////////////////////// -->
	<!-- dashboard -->
	
	<!-- 결제 대기중 -->
	<select id="countTrade" resultType="ChartModel">
		SELECT count(*) value FROM ORDER_BOOK WHERE ORDER_USE_YN = 1 AND PAYMENT_STATUS = 'PS01' ORDER BY ORDER_REGDATE
	</select>
	<!-- 배송 준비중 -->
	<select id="countTrans" resultType="ChartModel">
		SELECT count(*) value FROM ORDER_BOOK WHERE ORDER_USE_YN = 1 AND ORDER_TRANS_STATUS = 'ST01' ORDER BY ORDER_REGDATE
	</select>
	<!-- 배송 중 -->
	<select id="countTrans2" resultType="ChartModel">
		SELECT count(*) value FROM ORDER_BOOK WHERE ORDER_USE_YN = 1 AND ORDER_TRANS_STATUS = 'ST02' ORDER BY ORDER_REGDATE
	</select>
	
	<!-- 금일 신규 가입 회원 -->
	<select id="todayMember" resultType="ChartModel">
		select count(*) value from member where trunc(member_join_date) = trunc(sysdate) and member_use_yn = 0
	</select>
	<!-- 금일 주문 건수 -->
	<select id="todayOrder" resultType="ChartModel">
		select count(*) value from order_book where trunc(order_regdate) = trunc(order_regdate) and order_use_yn = 1
	</select>
	<!-- 금일 주문 금액 -->
	<select id="todaySalesM" resultType="ChartModel">
		select sum(order_moneysum) value from order_book where trunc(order_regdate) = trunc(order_regdate) and order_use_yn = 1
	</select>

	<!-- 오늘 팔린 도서 순위 -->
	<select id="todaySalesM" resultType="BooksModel">
		select c.*, b.book_auth, b.book_image, b.book_price, b.company_id 
			from ( select book_name, book_num, sum(order_book_count) book_sell_count 
				from ( select o.order_trade_num, o.order_regdate, od.book_num, od.order_book_name book_name, od.order_book_count 
				from order_book o inner join order_detail od on o.ORDER_TRADE_NUM = od.ORDER_TRADE_NUM where o.order_use_yn = 1 and trunc(order_regdate) =trunc(sysdate) 
				group by book_name, book_num order by book_sell_count desc) c inner join book b on c.book_num = b.book_num 
			where rownum>=1 and rownum<=8
	</select>
	
	<!-- 금일 가입 회원 통계-->
	<select id="newMemberGender" resultType="ChartModel"><!-- 최근 일주일 신규 회원 성별 구분 -->
		<![CDATA[select to_number(substr(to_char(member_jumin2),1,1)) key, count(*) value from member 
		where trunc(member_join_date)=trunc(sysdate) group by to_number(substr(to_char(member_jumin2),1,1))]]>
	</select>
	
	<select id="newMemberAge" resultType="ChartModel"><!-- 최근 일주일 신규 회원 연령 구분 -->
		<![CDATA[select to_number(substr(to_char(member_jumin1),1,1)) key, count(*) value from member 
			where trunc(member_join_date)=trunc(sysdate) group by to_number(substr(to_char(member_jumin1),1,1))]]>
	</select>
	
	<select id="newMemberRegion" resultType="ChartModel"><!-- 최근 일주일 신규 회원 지역 구분 -->
		<![CDATA[select substr(member_addr1,1,2) key, count(*) value from member 
		where trunc(member_join_date)=trunc(sysdate) group by substr(member_addr1,1,2)]]>
	</select>
	
	<!-- 금일 주문 통계-->
	<select id="weekOrderGender" resultType="ChartModel"><!-- 최근 7일 주문 성별 통계 -->
		<![CDATA[
			select to_number(substr(to_char(member_jumin2),1,1)) key, count(*) value from (
				select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
				from order_book a inner join member b on a.member_id=b.member_id where trunc(order_regdate)=trunc(sysdate))
			group by to_number(substr(to_char(member_jumin2),1,1))
		]]>
	</select>
	<select id="weekOrderAge" resultType="ChartModel"><!-- 최근 7일 주문 연령별 통계 -->
		<![CDATA[
			select substr(to_char(member_jumin1),1,1) key, count(*) value from (
				select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
				from order_book a inner join member b on a.member_id=b.member_id where trunc(order_regdate)=trunc(sysdate))
			group by substr(to_char(member_jumin1),1,1)
		]]>
	</select>
	<select id="weekOrderRegion" resultType="ChartModel"><!-- 최근 7일 주문 지역별 통계 -->
		<![CDATA[
			select substr(member_addr1,1,2) key, count(*) value from (
				select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
				from order_book a inner join member b on a.member_id=b.member_id where trunc(order_regdate)=trunc(sysdate))
			group by substr(member_addr1,1,2)]]>
	</select>
	
	
	<!-- //////////////////////////////////////////////////////////////////////////////////// -->
	<!-- chartM으로 종합 통계 구현하기. 아래의 주간 통계의 날짜를 지정 가능 하도록 해서 종합 통계 제공 -->
	
	<select id="chartAllM" resultType="ChartModel"> <!-- 날짜별 누적 회원수 -->
		select to_char(member_join_date, 'yy/mm') key, count(*) value 
		from member group by to_char(member_join_date, 'yy/mm') order by key asc
	</select>
	
	<select id="chartNewM" resultType="ChartModel"> <!-- 최근 일주일 동안 가입한 회원 수 통계 -->
		<![CDATA[
		select to_char(member_join_date,'mm.dd') key, count(*) value from member 
		where member_join_date<trunc(sysdate)+1 and member_join_date>=trunc(sysdate)-6
		group by to_char(member_join_date,'mm.dd') order by key asc]]>
	</select>
	
	<select id="memberGender" resultType="ChartModel"><!-- 전체 회원 기준 성별 구분 파이 차트 -->
		select substr(to_char(member_jumin2),1,1) key, count(*) value
		 from member group by substr(to_char(member_jumin2),1,1)
	</select>
	
	<select id="newMemberGender" resultType="ChartModel"><!-- 최근 일주일 신규 회원 성별 구분 -->
		<![CDATA[select to_number(substr(to_char(member_jumin2),1,1)) key, count(*) value
		from member where member_join_date<trunc(sysdate)+1 and member_join_date>=trunc(sysdate)-6
		group by to_number(substr(to_char(member_jumin2),1,1))]]>
	</select>
	
	<select id="memberAge" resultType="ChartModel"><!-- 전체 회원 기준 연령 구분 파이 차트 -->
		select to_number(substr(to_char(member_jumin1),1,1)) key, count(*) value
		from member group by to_number(substr(to_char(member_jumin1),1,1))
	</select>
	
	<select id="newMemberAge" resultType="ChartModel"><!-- 최근 일주일 신규 회원 연령 구분 -->
		<![CDATA[select to_number(substr(to_char(member_jumin1),1,1)) key, count(*) value
			from member where member_join_date<trunc(sysdate)+1 and member_join_date>=trunc(sysdate)-6
			group by to_number(substr(to_char(member_jumin1),1,1))]]>
	</select>
	
	<select id="memberRegion" resultType="ChartModel"><!-- 전체 회원 지역 구분 파이 차트 -->
		select substr(member_addr1,1,2) key, count(*) value from member group by substr(member_addr1,1,2)
	</select>
	
	<select id="newMemberRegion" resultType="ChartModel"><!-- 최근 일주일 신규 회원 지역 구분 -->
		<![CDATA[select substr(member_addr1,1,2) key, count(*) value from member 
		where member_join_date<trunc(sysdate)+1 and member_join_date>=trunc(sysdate)-6 group by substr(member_addr1,1,2)]]>
	</select>
	
	<!-- //////////////////////////////////////// -->
	<!-- 카테고리 관리 기능 구현 시 카테고리 판매량 분석 추가. -->
	<!-- 기간 지정 가능하도록 구현하기. -->
	
	<select id="bookSelling" resultType="BooksModel"><!-- 전체 기간 기준 가장 많이 팔인 책 8권 -->
		<![CDATA[select a.* from (select book_category, book_num, book_name, book_sell_count, book_image, book_auth, book_price
		from book order by book_sell_count desc) a where rownum>=1 and rownum<=8]]>
	</select>
	
	<select id="monthBookSelling" resultType="BooksModel"><!-- 저번 달의 판매량 순위 -->
		<![CDATA[select c.*, b.book_auth, b.book_image, b.book_price, b.company_id from (
					select book_name, book_num, sum(order_book_count) book_sell_count from (
  						select o.order_trade_num, o.order_regdate, od.book_num, od.order_book_name book_name, od.order_book_count 
  						from order_book o inner join order_detail od on o.ORDER_TRADE_NUM = od.ORDER_TRADE_NUM 
  						where o.order_use_yn = 1 and extract(month from order_regdate)=extract(month from sysdate)-1 )
					group by book_name, book_num order by book_sell_count desc) c inner join book b on c.book_num = b.book_num 
				where rownum>=1 and rownum<=8]]>
	</select>
	
	<select id="weekBookSelling" resultType="BooksModel"><!-- 최근 7일 판매량 순위 -->
		<![CDATA[select c.*, b.book_auth, b.book_image, b.book_price, b.company_id from (
					select book_name, book_num, sum(order_book_count) book_sell_count from (
  						select o.order_trade_num, o.order_regdate, od.book_num, od.order_book_name book_name, od.order_book_count 
  						from order_book o inner join order_detail od on o.ORDER_TRADE_NUM = od.ORDER_TRADE_NUM 
 						where o.order_use_yn = 1 and order_regdate<=trunc(sysdate)+1 and order_regdate>=trunc(sysdate)-6)
					group by book_name, book_num order by book_sell_count desc) c inner join book b on c.book_num = b.book_num 
				where rownum>=1 and rownum<=8]]>
	</select>
	
	<!-- //////////////////////////////////////// -->
	<!-- 차트 구현 후 기간 지정 가능 종합 통계 구현하기 --><!-- 매출 분석 순이익 필요? 매출 분석 시 결제 상태와 배송 상태 고려 -->
	
	<select id="monthOrderNum" resultType="ChartModel"><!-- 달별 주문량 조회 -->
		<![CDATA[select to_char(order_regdate,'yy/mm') key, count(*) value
			from order_book group by to_char(order_regdate,'yy/mm') order by key]]>
	</select>
	
	<select id="monthSales" resultType="ChartModel"><!-- 달별 판매량 조회 -->
		select to_char(order_regdate,'yy/mm') key, trunc(sum(ORDER_RECEIVE_MONEYSUM/1000000),2) price
		from order_book group by to_char(order_regdate,'yy/mm') order by key
	</select>
	
	<select id="weekOrderNum" resultType="ChartModel"><!-- 최근 7일 날짜별 주문량 조회 -->
		<![CDATA[select to_char(order_regdate,'mm.dd') key, count(*) value from order_book 
		where order_regdate<=trunc(sysdate)+1 and order_regdate>=trunc(sysdate)-6
		group by to_char(order_regdate,'mm.dd') order by key]]>
	</select>
	
	<select id="weekSales" resultType="ChartModel"><!-- 최근 7일 날짜별 판매량 -->
		<![CDATA[select to_char(order_regdate,'mm.dd') key, trunc(sum(ORDER_RECEIVE_MONEYSUM/1000)) price
		from order_book where order_regdate<=trunc(sysdate)+1 and order_regdate>=trunc(sysdate)-6
		group by to_char(order_regdate,'mm.dd') order by key]]>
	</select>
	
	<select id="monthOrderGender" resultType="ChartModel"><!-- 달별 성별 구분 -->
		select to_number(substr(to_char(member_jumin2),1,1)) key, count(*) value from (
			select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
			from order_book a inner join member b on a.member_id=b.member_id)
		group by to_number(substr(to_char(member_jumin2),1,1)) order by key
	</select>
	
	<select id="weekOrderGender" resultType="ChartModel"><!-- 최근 7일 주문 성별 통계 -->
		<![CDATA[
			select to_number(substr(to_char(member_jumin2),1,1)) key, count(*) value from (
				select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
				from order_book a inner join member b on a.member_id=b.member_id 
        		where order_regdate<=trunc(sysdate)+1 and order_regdate>=trunc(sysdate)-6)
			group by to_number(substr(to_char(member_jumin2),1,1))
		]]>
	</select>
	
	<select id="monthOrderAge" resultType="ChartModel"><!-- 달별 연령 구분 -->
		select to_number(substr(to_char(member_jumin1),1,1)) key, count(*) value from (
			select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
			from order_book a inner join member b on a.member_id=b.member_id)
		group by to_number(substr(to_char(member_jumin1),1,1)) order by key
	</select>
	
	<select id="weekOrderAge" resultType="ChartModel"><!-- 최근 7일 주문 연령별 통계 -->
		<![CDATA[
			select substr(to_char(member_jumin1),1,1) key, count(*) value from (
				select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
				from order_book a inner join member b on a.member_id=b.member_id 
				where order_regdate<=trunc(sysdate)+1 and order_regdate>=trunc(sysdate)-6)
			group by substr(to_char(member_jumin1),1,1)
		]]>
	</select>
	
	<select id="monthOrderRegion" resultType="ChartModel"><!-- 달별 지역 구분 -->
		select substr(member_addr1,1,2) key, count(*) value from (
			select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
			from order_book a inner join member b on a.member_id=b.member_id)
		group by substr(member_addr1,1,2) order by key
	</select>
	
	<select id="weekOrderRegion" resultType="ChartModel"><!-- 최근 7일 주문 지역별 통계 -->
		<![CDATA[
			select substr(member_addr1,1,2) key, count(*) value from (
				select a.order_trade_num, a.order_regdate, a.member_id, b.member_jumin1, b.member_jumin2, b.member_addr1 
				from order_book a inner join member b on a.member_id=b.member_id 
				where order_regdate<=trunc(sysdate)+1 and order_regdate>=trunc(sysdate)-6)
			group by substr(member_addr1,1,2)]]>
	</select>
	
</mapper>