<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">


	<!-- 자동 bean 등록 -->
	<context:component-scan base-package="com.spring" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Aspect Annotation -->
	<aop:aspectj-autoproxy />
	<aop:config proxy-target-class ="true" />
	<beans:bean id = "LoggerAspect" class ="com.spring.logger.LoggerAspect" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<beans:bean id="SessionInterceptor" class="com.spring.member.SessionInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<beans:bean id="LoggerInterceptor" class="com.spring.logger.LoggerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 파일업로드에 필요한 bean -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>

	<!-- 리소스 설정 -->
	<!-- mapping : 가상 경로(상대경로), location : 리소스가 실제로 저장된 경로 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- ViewResolver의 구현체로 특별한 mapping정보 없이 view이름을 URL로 사용-->
	<!-- 뷰 이름과 실제 뷰 자원과의 이름이 같을 때 사용할 수 있다 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value = "2" />
		<!-- viewResolver는 Ordered 인터페이스를 상속받고 있기 때문에 order 프로퍼티 이용해서 우선순위 지정 가능 -->
	</beans:bean>

	<!--  Tiles 뷰 리졸버  -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- Tiles 설정 파일 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	<!-- google Class Bean설정 추가 -->
	
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="235842342476-e0o44hgn028o77gjchap4blm06089gdc.apps.googleusercontent.com" />
		<beans:constructor-arg value="z8BCFKywZALlt9NHtTOQnJ49" />
	</beans:bean>
	
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri" value="http://localhost:8080/namuduri/member/loginForm/oauth2callback" />
	</beans:bean>
	
</beans:beans>
